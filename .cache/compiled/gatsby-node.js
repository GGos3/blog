!function(e,n,t,r){var o="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},i="function"==typeof o[r]&&o[r],a=i.cache||{},s="undefined"!=typeof module&&"function"==typeof module.require&&module.require.bind(module);function l(n,t){if(!a[n]){if(!e[n]){var u="function"==typeof o[r]&&o[r];if(!t&&u)return u(n,!0);if(i)return i(n,!0);if(s&&"string"==typeof n)return s(n);var d=new Error("Cannot find module '"+n+"'");throw d.code="MODULE_NOT_FOUND",d}c.resolve=function(t){var r=e[n][1][t];return null!=r?r:t},c.cache={};var f=a[n]=new l.Module(n);e[n][0].call(f.exports,c,f,f.exports,this)}return a[n].exports;function c(e){var n=c.resolve(e);return!1===n?{}:l(n)}}l.isParcelRequire=!0,l.Module=function(e){this.id=e,this.bundle=l,this.exports={}},l.modules=e,l.cache=a,l.parent=i,l.register=function(n,t){e[n]=[function(e,n){n.exports=t},{}]},Object.defineProperty(l,"root",{get:function(){return o[r]}}),o[r]=l;for(var u=0;u<n.length;u++)l(n[u]);if(t){var d=l(t);"object"==typeof exports&&"undefined"!=typeof module?module.exports=d:"function"==typeof define&&define.amd&&define((function(){return d}))}}({kIn2u:[function(e,n,t){var r=e("@parcel/transformer-js/src/esmodule-helpers.js");r.defineInteropFlag(t),r.export(t,"createPages",(()=>a)),r.export(t,"onCreateNode",(()=>s)),r.export(t,"createSchemaCustomization",(()=>l));var o=e("path"),i=e("gatsby-source-filesystem");const a=async({graphql:e,actions:n,reporter:t})=>{const r=o.resolve("./src/templates/blog-post.tsx"),i=await e("\n    {\n      allMarkdownRemark(sort: {frontmatter: {date: ASC}}, limit: 1000) {\n        nodes {\n          id\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  ");if(i.errors)return void t.panicOnBuild("There was an error loading your blog posts",i.errors);const a=i.data?.allMarkdownRemark.nodes;void 0!==a&&a.length>0&&a.forEach(((e,t)=>{const o=0===t?null:a[t-1].id,i=t===a.length-1?null:a[t+1].id;n.createPage({path:e.fields?.slug||"",component:r,context:{id:e.id,previousPostId:o,nextPostId:i}})}))},s=({node:e,actions:n,getNode:t})=>{if("MarkdownRemark"===e.internal.type){const r=(0,i.createFilePath)({node:e,getNode:t});n.createNodeField({name:"slug",node:e,value:r})}},l=({actions:e})=>{e.createTypes("\n    type SiteSiteMetadata {\n      author: String\n      description: String\n      siteUrl: String\n      social: Social\n      thumbnail: String\n    }\n\n    type Social {\n      github: String\n      twitter: String\n      facebook: String\n      linkedin: String\n      instagram: String\n    }\n\n    type MarkdownRemark implements Node {\n      frontmatter: Frontmatter\n      fields: Fields\n    }\n\n    type Frontmatter {\n      title: String\n      description: String\n      date: Date @dateformat\n      tags: [String]\n      thumbnail: String\n    }\n\n    type Fields {\n      slug: String\n    }\n  ")}},{path:"path","gatsby-source-filesystem":"gatsby-source-filesystem","@parcel/transformer-js/src/esmodule-helpers.js":"kmjAC"}],kmjAC:[function(e,n,t){t.interopDefault=function(e){return e&&e.__esModule?e:{default:e}},t.defineInteropFlag=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.exportAll=function(e,n){return Object.keys(e).forEach((function(t){"default"===t||"__esModule"===t||n.hasOwnProperty(t)||Object.defineProperty(n,t,{enumerable:!0,get:function(){return e[t]}})})),n},t.export=function(e,n,t){Object.defineProperty(e,n,{enumerable:!0,get:t})}},{}]},["kIn2u"],"kIn2u","parcelRequire1675");